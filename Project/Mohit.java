				System.out.println("\t+------------------------------------------------------------------------------+");
				System.out.println("\t|----------------------------------Methods-------------------------------------|");
				System.out.println("\t+------------------------------------------------------------------------------+");		
				System.out.println("\t| Methods of Java is a collection of statements that perform some specific task|");
				System.out.println("\t| and return the result to the caller. A Java method can perform some specific |");
				System.out.println("\t| task without returning anything.Java Methods allow us to reuse the code with-|");
				System.out.println("\t| out retyping the code.In Java, every method must be part of some class that  |");
				System.out.println("\t| is different from languages like C, C++, and Python.                         |");
				System.out.println("\t|                                                                              |");
				System.out.println("\t| 1. A method is like a function i.e. used to expose the behavior of an object.|");
				System.out.println("\t| 2. It is a set of codes that perform a particular task.         			 |");
				System.out.println("\t| 3. A large programing is to be divided into its sub program  and provide the |");
				System.out.println("\t|    a single solution for them is called modularing  programming              |");
				System.out.println("\t| 4. Business logics are written in the method .                               |");
				System.out.println("\t| 5. Function has indivisual entity.                                           |");
				System.out.println("\t| 6. C++ is parser Programing language because the main function is made out of|");
				System.out.println("\t|    the class.                                                                |");
				System.out.println("\t| 7. Object Oriented follow the Bottom-Up Approch.                             |");		
				System.out.println("\t| 8. Function are made outside the class java doesn't support function.        |");
				System.out.println("\t| 9. Method we create inside the class.                                        |");
				System.out.println("\t|10. Method Naming convention:-First Letter must be small but second word first|");
				System.out.println("\t|    letter must be capital. e.g.:- myWidth();      |");
				System.out.println("\t+------------------------------------------------------------------------------+");
				System.out.println("\t|-------------------There are two types of methods in Java:--------------------|");
				System.out.println("\t+------------------------------------------------------------------------------+");
				System.out.println("\t|          1.Predefined Method                    2.user-defined method        |");
				System.out.println("\t+------------------------------------------------------------------------------+");
				System.out.println("\t|-----------------------------Predefined Method--------------------------------|");
				System.out.println("\t+------------------------------------------------------------------------------+");
				System.out.println("\t| Predefined methods are the method that is already defined in the Java class	 |");
				System.out.println("\t| libraries is known as predefined methods. It is also known as the standard   |");
				System.out.println("\t| library method or built-in method. We can directly use these methods just by |");
				System.out.println("\t| calling them in the program at any point.                                    |");
				System.out.println("\t+------------------------------------------------------------------------------+");
				System.out.println("\t|----------------------------User-defined Method-------------------------------|");
				System.out.println("\t+------------------------------------------------------------------------------+");
				System.out.println("\t|The method written by the user or programmer is known as a user-defined method|");
				System.out.println("\t|These methods are modified according to the requirement.                      |");
				System.out.println("\t|------------------------------------------------------------------------------|");				
				System.out.println("\t|-------------------------------Syntax Method----------------------------------|");
				System.out.println("\t|                                                                              |");
				System.out.println("\t|     returntype methodName(parameter1,parameter2..............parametern)     |");
				System.out.println("\t|------------------------------------------------------------------------------|");
				System.out.println("\t| |");
				System.out.println("\t|                         faces of this package will be accessible but not     |");
				System.out.println("\t|  subpackages.                                                                |");
				System.out.println("\t|                                                                              |");
				System.out.println("\t|  2.import package.classname; :-If you import package.classname then only     |");
				System.out.println("\t|                            declared class of this package will be accessible.|");
				System.out.println("\t|                                                                              |");
				System.out.println("\t|  3.fully qualified name.:-If you use fully qualified name then only declared |");
				System.out.println("\t|                           class of this package will be accessible. Now there|");
				System.out.println("\t|  is no need to import. But you need to use fully qualified name every time   |");
				System.out.println("\t|  when you are accessing the class or interface.                              |");
				System.out.println("\t|------------------------------------------------------------------------------|");
				System.out.println("\t|------------------------Interviews Question package---------------------------|");
				System.out.println("\t+------------------------------------------------------------------------------+");
				System.out.println("\t| 1. What is a package?                                                        |");
				System.out.println("\t|Ans: The package is a grouping mechanism in which related class files are     |");
				System.out.println("\t|     grouped and made available to other applications and other parts of the  |");
				System.out.println("\t|     same application.So,the package is a collection of related classes and   |");				
				System.out.println("\t|	    interfaces. The package declaration should be the first statement in a   |");
				System.out.println("\t|     Java class.                                                              |");
				System.out.println("\t|------------------------------------------------------------------------------|");				
				System.out.println("\t| 2. What is a Java package and how is it used?                                |");
				System.out.println("\t| Ans: A Java package is a naming context for classes and interfaces.A package |");
				System.out.println("\t|      is used to create a separate namespace for groups of classes and inter- |");
				System.out.println("\t|      faces.Packages are also used to organize related classes and interfaces |");
				System.out.println("\t|      into a single API unit and to control accessibility to these classes    |");
				System.out.println("\t|      and interfaces.                                                         |");
				System.out.println("\t|------------------------------------------------------------------------------|");
				System.out.println("\t| 3. What is the first keyword used in a Java application development?         |");
				System.out.println("\t|Ans: The ‘Package’is the first keyword used in a Java Application development.|");
				System.out.println("\t|------------------------------------------------------------------------------|");
				System.out.println("\t| 4. Which package is imported, by default?                                    |");
				System.out.println("\t|Ans: By default, the ‘Java.lang’ the package is imported, even without a      |");
				System.out.println("\t|     package declaration.                                                     |");
				System.out.println("\t|------------------------------------------------------------------------------|");
				System.out.println("\t| 5. Can a class declare as private be accessed outside its package?           |");
				System.out.println("\t|Ans: No. once declared as private, it is not possible to access the class     |");
				System.out.println("\t|     outside its package.                                                     |");
				System.out.println("\t|------------------------------------------------------------------------------|");
				System.out.println("\t| 6. What is the naming convention to be followed for declaring a user-defined |");
				System.out.println("\t|    package in Java application development?                                  |");
				System.out.println("\t|Ans: The Reverse Domain naming convention is to be followed for declaring a   |");
				System.out.println("\t|     user-defined package in Java Application development.                    |");				
				System.out.println("\t|------------------------------------------------------------------------------|");
				System.out.println("\t| 7. What are the types of packages in Java?                                   |");
				System.out.println("\t|Ans: There are two types of packages in Java                                  |");				
				System.out.println("\t|     1. Standard or Built-in packages                                         |");
				System.out.println("\t|     2. User-defined packages.                                                |");
				System.out.println("\t|------------------------------------------------------------------------------|");
				System.out.println("\t| 8. What is a user-defined package in Java?                                   |");
				System.out.println("\t|Ans: The packages which are created by the users in the Java application      |");
				System.out.println("\t|    development are known as “user-defined package”.                          |");
				System.out.println("\t|------------------------------------------------------------------------------|");
				System.out.println("\t| 9. Do I need to import Java?lang package any time? If yes, then why?         |");
				System.out.println("\t|Ans: No. It is by default loaded internally by the JVM.                       |");
				System.out.println("\t|------------------------------------------------------------------------------|");
				System.out.println("\t| 10.What is a reflection package?                                             |");
				System.out.println("\t|Ans:The java.lang reflect package has the ability to analyze itself in runtime|");
				System.out.println("\t|------------------------------------------------------------------------------|");